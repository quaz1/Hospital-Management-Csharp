#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hospital_Management
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HPP")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStaffinfo(Staffinfo instance);
    partial void UpdateStaffinfo(Staffinfo instance);
    partial void DeleteStaffinfo(Staffinfo instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertPatientreg(Patientreg instance);
    partial void UpdatePatientreg(Patientreg instance);
    partial void DeletePatientreg(Patientreg instance);
    partial void InsertBlood(Blood instance);
    partial void UpdateBlood(Blood instance);
    partial void DeleteBlood(Blood instance);
    partial void InsertDoctorr(Doctorr instance);
    partial void UpdateDoctorr(Doctorr instance);
    partial void DeleteDoctorr(Doctorr instance);
    partial void InsertMorgue(Morgue instance);
    partial void UpdateMorgue(Morgue instance);
    partial void DeleteMorgue(Morgue instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::Hospital_Management.Properties.Settings.Default.HPPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Staffinfo> Staffinfos
		{
			get
			{
				return this.GetTable<Staffinfo>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Patientreg> Patientregs
		{
			get
			{
				return this.GetTable<Patientreg>();
			}
		}
		
		public System.Data.Linq.Table<Blood> Bloods
		{
			get
			{
				return this.GetTable<Blood>();
			}
		}
		
		public System.Data.Linq.Table<Doctorr> Doctorrs
		{
			get
			{
				return this.GetTable<Doctorr>();
			}
		}
		
		public System.Data.Linq.Table<Morgue> Morgues
		{
			get
			{
				return this.GetTable<Morgue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staffinfo")]
	public partial class Staffinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _fullname;
		
		private string _username;
		
		private string _password;
		
		private string _DOB;
		
		private string _phone;
		
		private string _address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Staffinfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="VarChar(50)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50)")]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patientreg")]
	public partial class Patientreg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _regno;
		
		private string _regdate;
		
		private string _PID;
		
		private string _pname;
		
		private string _gender_;
		
		private string _age;
		
		private string _pphone;
		
		private string _paddress;
		
		private string _disease;
		
		private string _roomno;
		
		private string _roomtype;
		
		private string _price;
		
		private string _blood;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnregnoChanging(string value);
    partial void OnregnoChanged();
    partial void OnregdateChanging(string value);
    partial void OnregdateChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnpnameChanging(string value);
    partial void OnpnameChanged();
    partial void Ongender_Changing(string value);
    partial void Ongender_Changed();
    partial void OnageChanging(string value);
    partial void OnageChanged();
    partial void OnpphoneChanging(string value);
    partial void OnpphoneChanged();
    partial void OnpaddressChanging(string value);
    partial void OnpaddressChanged();
    partial void OndiseaseChanging(string value);
    partial void OndiseaseChanged();
    partial void OnroomnoChanging(string value);
    partial void OnroomnoChanged();
    partial void OnroomtypeChanging(string value);
    partial void OnroomtypeChanged();
    partial void OnpriceChanging(string value);
    partial void OnpriceChanged();
    partial void OnbloodChanging(string value);
    partial void OnbloodChanged();
    #endregion
		
		public Patientreg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string regno
		{
			get
			{
				return this._regno;
			}
			set
			{
				if ((this._regno != value))
				{
					this.OnregnoChanging(value);
					this.SendPropertyChanging();
					this._regno = value;
					this.SendPropertyChanged("regno");
					this.OnregnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regdate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string regdate
		{
			get
			{
				return this._regdate;
			}
			set
			{
				if ((this._regdate != value))
				{
					this.OnregdateChanging(value);
					this.SendPropertyChanging();
					this._regdate = value;
					this.SendPropertyChanged("regdate");
					this.OnregdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pname
		{
			get
			{
				return this._pname;
			}
			set
			{
				if ((this._pname != value))
				{
					this.OnpnameChanging(value);
					this.SendPropertyChanging();
					this._pname = value;
					this.SendPropertyChanged("pname");
					this.OnpnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[gender ]", Storage="_gender_", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gender_
		{
			get
			{
				return this._gender_;
			}
			set
			{
				if ((this._gender_ != value))
				{
					this.Ongender_Changing(value);
					this.SendPropertyChanging();
					this._gender_ = value;
					this.SendPropertyChanged("gender_");
					this.Ongender_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pphone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pphone
		{
			get
			{
				return this._pphone;
			}
			set
			{
				if ((this._pphone != value))
				{
					this.OnpphoneChanging(value);
					this.SendPropertyChanging();
					this._pphone = value;
					this.SendPropertyChanged("pphone");
					this.OnpphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string paddress
		{
			get
			{
				return this._paddress;
			}
			set
			{
				if ((this._paddress != value))
				{
					this.OnpaddressChanging(value);
					this.SendPropertyChanging();
					this._paddress = value;
					this.SendPropertyChanged("paddress");
					this.OnpaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disease", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string disease
		{
			get
			{
				return this._disease;
			}
			set
			{
				if ((this._disease != value))
				{
					this.OndiseaseChanging(value);
					this.SendPropertyChanging();
					this._disease = value;
					this.SendPropertyChanged("disease");
					this.OndiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string roomno
		{
			get
			{
				return this._roomno;
			}
			set
			{
				if ((this._roomno != value))
				{
					this.OnroomnoChanging(value);
					this.SendPropertyChanging();
					this._roomno = value;
					this.SendPropertyChanged("roomno");
					this.OnroomnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roomtype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string roomtype
		{
			get
			{
				return this._roomtype;
			}
			set
			{
				if ((this._roomtype != value))
				{
					this.OnroomtypeChanging(value);
					this.SendPropertyChanging();
					this._roomtype = value;
					this.SendPropertyChanged("roomtype");
					this.OnroomtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blood", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string blood
		{
			get
			{
				return this._blood;
			}
			set
			{
				if ((this._blood != value))
				{
					this.OnbloodChanging(value);
					this.SendPropertyChanging();
					this._blood = value;
					this.SendPropertyChanged("blood");
					this.OnbloodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BloodBank")]
	public partial class Blood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BloodType;
		
		private string _Quanitity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnQuanitityChanging(string value);
    partial void OnQuanitityChanged();
    #endregion
		
		public Blood()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quanitity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Quanitity
		{
			get
			{
				return this._Quanitity;
			}
			set
			{
				if ((this._Quanitity != value))
				{
					this.OnQuanitityChanging(value);
					this.SendPropertyChanging();
					this._Quanitity = value;
					this.SendPropertyChanged("Quanitity");
					this.OnQuanitityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctorr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Designation;
		
		private string _Department;
		
		private string _Degree_Qualification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnDegree_QualificationChanging(string value);
    partial void OnDegree_QualificationChanged();
    #endregion
		
		public Doctorr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Degree/Qualification]", Storage="_Degree_Qualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Degree_Qualification
		{
			get
			{
				return this._Degree_Qualification;
			}
			set
			{
				if ((this._Degree_Qualification != value))
				{
					this.OnDegree_QualificationChanging(value);
					this.SendPropertyChanging();
					this._Degree_Qualification = value;
					this.SendPropertyChanged("Degree_Qualification");
					this.OnDegree_QualificationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Morgue")]
	public partial class Morgue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _PatientID;
		
		private string _Cause_of_Death;
		
		private string _Time_of_Death;
		
		private string _Disease;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPatientIDChanging(string value);
    partial void OnPatientIDChanged();
    partial void OnCause_of_DeathChanging(string value);
    partial void OnCause_of_DeathChanged();
    partial void OnTime_of_DeathChanging(string value);
    partial void OnTime_of_DeathChanged();
    partial void OnDiseaseChanging(string value);
    partial void OnDiseaseChanged();
    #endregion
		
		public Morgue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Cause of Death]", Storage="_Cause_of_Death", DbType="VarChar(50)")]
		public string Cause_of_Death
		{
			get
			{
				return this._Cause_of_Death;
			}
			set
			{
				if ((this._Cause_of_Death != value))
				{
					this.OnCause_of_DeathChanging(value);
					this.SendPropertyChanging();
					this._Cause_of_Death = value;
					this.SendPropertyChanged("Cause_of_Death");
					this.OnCause_of_DeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time of Death]", Storage="_Time_of_Death", DbType="VarChar(50)")]
		public string Time_of_Death
		{
			get
			{
				return this._Time_of_Death;
			}
			set
			{
				if ((this._Time_of_Death != value))
				{
					this.OnTime_of_DeathChanging(value);
					this.SendPropertyChanging();
					this._Time_of_Death = value;
					this.SendPropertyChanged("Time_of_Death");
					this.OnTime_of_DeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disease", DbType="VarChar(50)")]
		public string Disease
		{
			get
			{
				return this._Disease;
			}
			set
			{
				if ((this._Disease != value))
				{
					this.OnDiseaseChanging(value);
					this.SendPropertyChanging();
					this._Disease = value;
					this.SendPropertyChanged("Disease");
					this.OnDiseaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
